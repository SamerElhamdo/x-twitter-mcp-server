#!/usr/bin/env python3
"""
MCP Proxy Runner - ูุญุณู ููุฃุฏุงุก ุงูุณุฑูุน
"""

import subprocess
import sys
import os
import signal
import time
from pathlib import Path

def signal_handler(signum, frame):
    """ูุนุงูุฌ ุฅุดุงุฑุงุช ุงูุฅููุงู"""
    print(f"\n๐ ุชู ุงุณุชูุงู ุฅุดุงุฑุฉ {signum}")
    print("โณ ุฅููุงู mcp-proxy...")
    sys.exit(0)

def run_mcp_proxy():
    """ุชุดุบูู mcp-proxy ูุน ุฅุนุฏุงุฏุงุช ูุญุณูุฉ"""
    
    # ุฅุนุฏุงุฏ ูุนุงูุฌ ุงูุฅุดุงุฑุงุช
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    print("๐ ุจุฏุก ุชุดุบูู MCP Proxy...")
    print("๐ ุฅุนุฏุงุฏุงุช ูุญุณูุฉ ููุฃุฏุงุก ุงูุณุฑูุน")
    print("โก ุชุญุณูู ุงูุงุณุชุฌุงุจุฉ")
    print("๐ง ุฅุตูุงุญ warnings")
    print()
    
    # ุฃูุงูุฑ mcp-proxy ูุญุณูุฉ
    cmd = [
        "mcp-proxy",
        "--host=0.0.0.0",
        "--port=9000",
        "--allow-origin=*",
        "--log-level=warning",  # ุชูููู logging
        "--timeout=30",         # timeout ูุญุณู
        "--max-connections=100", # ุฒูุงุฏุฉ ุงูุญุฏ ุงูุฃูุตู ููุงุชุตุงูุงุช
        "--",
        "python", "run_server.py"
    ]
    
    try:
        print(f"๐ง ุชุดุบูู: {' '.join(cmd)}")
        print("๐ Endpoint: http://0.0.0.0:9000/sse")
        print("๐ ูู n8n: http://YOUR_IP:9000/sse")
        print()
        print("โณ ุงูุชุธุงุฑ ุจุฏุก ุงูุชุดุบูู...")
        
        # ุชุดุบูู mcp-proxy
        process = subprocess.Popen(
            cmd,
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
            universal_newlines=True,
            bufsize=1
        )
        
        # ุงูุชุธุงุฑ ูููู ููุชุฃูุฏ ูู ุจุฏุก ุงูุชุดุบูู
        time.sleep(3)
        
        if process.poll() is None:
            print("โ mcp-proxy ูุนูู ุจูุฌุงุญ!")
            print("๐ฑ ููููู ุงูุขู ุงูุงุชุตุงู ูู n8n")
            print()
            print("๐ ูุนูููุงุช ุงูุงุชุตุงู:")
            print("   - Endpoint: http://0.0.0.0:9000/sse")
            print("   - Transport: SSE")
            print("   - Status: ูุดุท")
            print()
            print("โน๏ธ  ููุฅููุงู: ุงุถุบุท Ctrl+C")
            
            # ูุฑุงูุจุฉ ุงูุนูููุฉ
            while True:
                output = process.stdout.readline()
                if output:
                    # ุชุตููุฉ ุงูุฑุณุงุฆู ุบูุฑ ุงูุถุฑูุฑูุฉ
                    if "WARNING" not in output and "Invalid HTTP request" not in output:
                        print(output.strip())
                
                # ุงูุชุญูู ูู ุญุงูุฉ ุงูุนูููุฉ
                if process.poll() is not None:
                    break
                    
        else:
            print("โ ูุดู ูู ุจุฏุก ุชุดุบูู mcp-proxy")
            return_code = process.returncode
            print(f"๐ ุฑูุฒ ุงูุฅุฑุฌุงุน: {return_code}")
            
    except KeyboardInterrupt:
        print("\n๐ ุชู ุฅููุงู mcp-proxy ุจูุงุณุทุฉ ุงููุณุชุฎุฏู")
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุชุดุบูู mcp-proxy: {e}")
    finally:
        # ุฅููุงู ุงูุนูููุฉ
        if 'process' in locals() and process.poll() is None:
            process.terminate()
            process.wait()
            print("โ ุชู ุฅููุงู mcp-proxy")

if __name__ == "__main__":
    # ุงูุชุญูู ูู ูุฌูุฏ mcp-proxy
    try:
        subprocess.run(["mcp-proxy", "--help"], capture_output=True, check=True)
    except (subprocess.CalledProcessError, FileNotFoundError):
        print("โ mcp-proxy ุบูุฑ ูุซุจุช")
        print("๐ก ูู ุจุชุซุจูุชู: pip install mcp-proxy")
        sys.exit(1)
    
    # ุชุดุบูู mcp-proxy
    run_mcp_proxy()
